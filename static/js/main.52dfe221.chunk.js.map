{"version":3,"sources":["system.js","components/Item.js","components/Editor.js","components/controls/Select.js","components/Section.js","components/TopBar.js","components/Modal.js","util.js","components/Importer.js","components/Preview.js","components/Presets/Presets.js","components/Presets/index.js","App.js","index.js"],"names":["detectPlatform","window","navigator","userAgent","indexOf","joinPath","path","platform","join","localPath","basePath","stylesNormal","overflow","stylesLarge","height","Item","title","description","children","disabled","large","isDisabled","className","style","defaultPropTypes","Editor","change","section","prop","value","props","onChange","settings","prevProps","__internal","configMode","this","componentHandler","upgradeDom","base","common","base_path","isSimple","select","renderConfig","simple","sections","Object","keys","data","filter","sectionName","includeSection","eval","condition","console","debug","some","propName","log","name","map","items","key","deprecated","item","disable","enable","enabled","type","flag","multiselect","datalist","list","text","number","isEnabled","check","or","default","fillDescription","values","val","id","allowInput","suggestions","toLowerCase","current","ev","checked","target","newValue","idx","push","splice","htmlFor","Number","min","max","replace","split","processValue","x","toString","v","bottom","right","zIndex","transform","onClick","concat","Component","warn","def","undefined","Error","match","Select","selected","find","display","data-val","onKeyDown","handleKeyPress","classnames","readOnly","keyCode","dispatchEvent","MouseEvent","styles","sectionVisible","sectionHidden","visibility","Section","args","state","collapsed","toggleCollapsed","setState","newProps","cursor","defaultProps","TopBar","Modal","ReactDOM","findDOMNode","close","showModal","dialog","dialogPolyfill","registerDialog","isOpen","setTimeout","show","onClose","mix","a","b","Array","isArray","forEach","clone","JSON","parse","stringify","Importer","handleFileChange","bind","handleClick","file","files","domTarget","confirm","reader","FileReader","onload","_","importedData","toml","result","err","onError","defaults","blur","readAsText","refs","fileInput","click","ref","PureComponent","toToml","reduce","acc","sectionDescription","heading","width","banner","repeat","inner","left_pad","Math","floor","length","right_pad","toSectionHeader","split_comment_at","vals","comment","toComment","setting","toVal","configPath","unshift","multi_comment","line_length","lines","words","line","shift","Preview","generateConfig","blob","Blob","msSaveOrOpenBlob","msSaveBlob","elem","document","createElement","href","URL","createObjectURL","download","body","appendChild","removeChild","rel","location","presets","Presets","preset","forceUpdate","loadSettings","defaultSettings","generateDefaults","localStorage","getItem","e","setItem","loadFromLocalStorage","url","hash","startsWith","config","atob","loadFromURL","errors","settingsValue","defaultSettingsValue","expected","error","base_node","chain","saveSettings","cloned","isEqual","json","btoa","d","App","handleChange","handlePreset","handleError","modal","visible","content","lis","i","render","getElementById"],"mappings":"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","file":"static/js/main.52dfe221.chunk.js","sourcesContent":["export function detectPlatform () {\n  if (window.navigator.userAgent.indexOf('Windows') !== -1) {\n    return 'Windows';\n  }\n\n  if (window.navigator.userAgent.indexOf('Mac') !== -1) {\n    return 'Mac OS';\n  }\n\n  return 'Linux';\n}\n\nexport function joinPath (path, platform) {\n  if (platform === 'Windows') {\n    return path.join('\\\\');\n  }\n\n  return path.join('/');\n}\n\nexport function localPath (platform) {\n  if (platform === 'Windows') {\n    return joinPath([\n      '%UserProfile%',\n      'AppData',\n      'Local',\n      'Tari',\n    ], platform);\n  }\n\n  return '$BASE';\n}\n\nexport function basePath (platform) {\n  if (platform === 'Windows') {\n    return joinPath([\n      '%AppData%',\n      'tari',\n    ], platform);\n  }\n\n  if (platform === 'Mac OS') {\n    return joinPath([\n      '$HOME',\n      '.tari',\n    ], platform);\n  }\n\n  return joinPath([\n    '~',\n    '.tari',\n  ], platform);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst stylesNormal = {overflow: 'visible'};\nconst stylesLarge = {overflow: 'visible', height: 'auto'};\n\nfunction Item ({title, description, children, disabled, large}) {\n  const isDisabled = disabled ? 'disabled' : '';\n  return (\n    <li\n      className={`mdl-list__item mdl-list__item--two-line ${isDisabled}`}\n      style={large ? stylesLarge : stylesNormal}\n      >\n      <span className='mdl-list__item-primary-content'>\n        <span>{title}</span>\n        <span className='mdl-list__item-sub-title'>\n          {description}\n        </span>\n      </span>\n      <span className='mdl-list__item-secondary-content'>\n        {children}\n      </span>\n    </li>\n  );\n}\n\nItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.array]).isRequired,\n  disabled: PropTypes.bool,\n  large: PropTypes.bool\n};\n\nItem.defaultPropTypes = {\n  disabled: false,\n  large: false\n};\n\nexport default Item;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Section from './Section';\nimport Item from './Item';\nimport Select from './controls/Select';\n\nimport { localPath, basePath, joinPath } from '../system';\nimport data from '../tari.config.json';\n\nimport 'material-design-lite';\n\nclass Editor extends Component {\n\n  static propTypes = {\n    settings: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired\n  };\n\n  change = (section, prop) => {\n    return value => {\n      this.props.onChange({\n        ...this.props.settings,\n        [section]: {\n          ...this.props.settings[section],\n          [prop]: value\n        }\n      });\n    };\n  };\n\n  componentDidUpdate (prevProps) {\n    if (prevProps.settings.__internal.configMode !== this.props.settings.__internal.configMode) {\n      window.componentHandler.upgradeDom();\n    }\n  }\n\n  render () {\n    const {settings} = this.props;\n    const {configMode, platform} = settings.__internal;\n    const base = settings.common.base_path !== '$BASE' ? settings.common.base_path : basePath(platform);\n\n    const isSimple = configMode === 'simple';\n    return (\n      <div>\n        { this.select('__internal', 'platform') }\n        { this.select('__internal', 'configMode') }\n        <div>\n          { this.renderConfig(isSimple, settings, platform, base) }\n        </div>\n      </div>\n    );\n  }\n\n  renderConfig (simple, settings, platform, base) {\n    this.configMode = simple ? 'simple' : 'advanced';\n\n    const sections = Object.keys(data)\n      .filter(sectionName => sectionName !== '__internal')\n      .filter(sectionName => {\n          const section = data[sectionName];\n          let includeSection = true;\n          if ('condition' in section) {\n              // eslint-disable-next-line no-eval\n              includeSection = eval(section.condition);\n          }\n          if (!includeSection) {\n              console.debug(`Section ${sectionName} excluded due to matching condition`);\n          }\n          return !!includeSection\n      })\n      .filter(sectionName => !simple ||\n          Object.keys(data[sectionName]).some(propName => {\n            const prop = data[sectionName][propName];\n            console.log(`${data[sectionName][propName].name}: ${prop.simple}`);\n            return typeof prop === 'object' && prop.simple;\n          })\n      )\n      .map(sectionName => {\n        const section = data[sectionName];\n\n\n\n        let items = Object.keys(section)\n            .filter(key => key !== 'section' && key !== 'description' && key !== 'condition')\n            .filter(propName => !section[propName].deprecated)\n            .filter(propName => !simple || section[propName].simple)\n            .map(propName => {\n              const prop = section[propName];\n\n              let condition = true;\n              if ('disable' in section && propName !== 'disable') {\n                condition = condition && !settings[sectionName].disable;\n              } else if ('enable' in section && propName !== 'enable') {\n                condition = condition && settings[sectionName].enable;\n              } else if ('enabled' in section && propName !== 'enabled') {\n                condition = condition && settings[sectionName].enabled;\n              }\n\n              if ('condition' in prop) {\n                // eslint-disable-next-line no-eval\n                condition = condition && eval(prop.condition);\n              }\n\n              let item;\n              if (prop.type === 'bool') {\n                item = this.flag(sectionName, propName, condition);\n              } else if ('values' in prop) {\n                if (prop.type === 'string[]') {\n                  item = this.multiselect(sectionName, propName, condition);\n                } else {\n                  item = this.select(sectionName, propName, condition);\n                }\n              } else if ('suggestions' in prop) {\n                item = this.datalist(sectionName, propName, condition);\n              } else if (prop.type === 'path') {\n                item = this.path(sectionName, propName, base, platform, condition);\n              } else if (prop.type === 'string[]') {\n                item = this.list(sectionName, propName, condition);\n              } else if (prop.type === 'string') {\n                item = this.text(sectionName, propName, condition);\n              } else if (prop.type === 'number') {\n                item = this.number(sectionName, propName, condition);\n              }\n\n              return (\n                <Fragment key={`${simple}.${sectionName}.${propName}`}>\n                  {item}\n                </Fragment>\n              );\n            });\n\n        return (\n          <Section key={`${simple}.${section.section}`} title={section.section} description={section.description}>\n            { items }\n          </Section>\n        );\n      });\n\n    return (<div>{sections}</div>);\n  }\n\n  select (section, prop, isEnabled = true) {\n    check(section, prop);\n\n    // TODO [ToDr] hacky\n    const {configMode} = this;\n\n    const {settings} = this.props;\n    const value = or(settings[section][prop], data[section][prop].default);\n    const description = fillDescription(data[section][prop].description[value], value, `${section}.${prop}`);\n\n    return (\n      <Item\n        title={data[section][prop].name}\n        description={description}\n        disabled={!isEnabled}\n        >\n        <Select\n          onChange={this.change(section, prop)}\n          value={value}\n          values={data[section][prop].values.map(val)}\n          id={`${configMode}_${prop}`}\n          disabled={!isEnabled}\n          allowInput={false}\n        />\n      </Item>\n    );\n  }\n\n  datalist (section, prop, isEnabled = true) {\n    check(section, prop);\n\n    // TODO [ToDr] hacky\n    const {configMode} = this;\n\n    const {settings} = this.props;\n    const value = or(settings[section][prop], data[section][prop].default);\n    const suggestions = data[section][prop].suggestions.map(val);\n    const description = suggestions.some(val => val.value === value)\n      ? fillDescription(data[section][prop].description[value], value, `${section}.${prop}`)\n      : `Custom ${data[section][prop].name.toLowerCase()}`;\n\n    return (\n      <Item\n        title={data[section][prop].name}\n        description={description}\n        disabled={!isEnabled}\n        >\n        <Select\n          onChange={this.change(section, prop)}\n          value={value}\n          values={suggestions}\n          id={`${configMode}_${prop}`}\n          disabled={!isEnabled}\n          allowInput\n        />\n      </Item>\n    );\n  }\n\n  multiselect (section, prop, isEnabled = true) {\n    check(section, prop);\n\n    // TODO [ToDr] hacky\n    const {configMode} = this;\n\n    const {settings} = this.props;\n    const current = settings[section][prop] || [];\n    const description = fillDescription(data[section][prop].description, current);\n\n    const change = (val) => (ev) => {\n      const {checked} = ev.target;\n      const newValue = [...current];\n      const idx = newValue.indexOf(val);\n\n      if (checked) {\n        newValue.push(val);\n      } else if (idx !== -1) {\n        newValue.splice(idx, 1);\n      }\n\n      this.change(section, prop)(newValue);\n    };\n\n    return (\n      <Item\n        title={data[section][prop].name}\n        description={description}\n        disabled={!isEnabled}\n        large\n        >\n        {data[section][prop].values.map(val).map(value => {\n          const id = `${configMode}_${section}_${prop}_${value.value}`;\n\n          return (\n            <label className='mdl-switch mdl-js-switch' htmlFor={id} key={value.name}>\n              <input\n                type='checkbox'\n                id={id}\n                className='mdl-switch__input'\n                checked={current.indexOf(value.value) !== -1}\n                disabled={!isEnabled}\n                onChange={change(value.value)}\n                />\n              <span className='mdl-switch__label'>{value.name}</span>\n            </label>\n          );\n        })}\n      </Item>\n    );\n  }\n\n  number (section, prop, isEnabled = true) {\n    check(section, prop);\n    const {settings} = this.props;\n    const value = or(settings[section][prop], data[section][prop].default);\n    const description = fillDescription(data[section][prop].description, value);\n\n    return (\n      <Item\n        title={data[section][prop].name}\n        description={description}\n        disabled={!isEnabled}\n        >\n        <div className='mdl-textfield mdl-js-textfield mdl-textfield--floating-label'>\n          <input\n            className='mdl-textfield__input'\n            type='number'\n            value={value || 0}\n            onChange={(ev) => this.change(section, prop)(Number(ev.target.value))}\n            min={data[section][prop].min}\n            max={data[section][prop].max}\n            disabled={!isEnabled}\n            />\n          <span className='mdl-textfield__error'>Please provide a valid number (min: {data[section][prop].min}, max: {data[section][prop].max})</span>\n        </div>\n      </Item>\n    );\n  }\n\n  path (section, prop, base, platform, isEnabled = true) {\n    return this.text(section, prop, isEnabled, value => {\n      if (!value) {\n        return value;\n      }\n      value = value.replace('$LOCAL', localPath(platform));\n      value = value.replace('$BASE', base);\n      // normalize separators\n      value = joinPath(value.split('\\\\'), platform);\n      value = joinPath(value.split('/'), platform);\n      return value;\n    });\n  }\n\n  text (section, prop, isEnabled = true, processValue = x => x) {\n    check(section, prop);\n    const {settings} = this.props;\n    const value = processValue(or(settings[section][prop], data[section][prop].default));\n    const description = fillDescription(data[section][prop].description, value);\n\n    return (\n      <Item\n        title={data[section][prop].name}\n        description={description}\n        disabled={!isEnabled}\n        >\n        <div className='mdl-textfield mdl-js-textfield mdl-textfield--floating-label'>\n          <input\n            className='mdl-textfield__input'\n            type='text'\n            value={value || ''}\n            onChange={(ev) => this.change(section, prop)(ev.target.value)}\n            disabled={!isEnabled}\n            />\n        </div>\n      </Item>\n    );\n  }\n\n  flag (section, prop, isEnabled = true) {\n    check(section, prop);\n\n    // TODO [ToDr] hacky\n    const {configMode} = this;\n\n    const {settings} = this.props;\n    const value = or(settings[section][prop], data[section][prop].default);\n    const description = fillDescription(data[section][prop].description, value);\n    const id = `${configMode}_${section}_${prop}`;\n\n    return (\n      <Item\n        title={data[section][prop].name}\n        description={description}\n        disabled={!isEnabled}\n        >\n        <label className='mdl-switch mdl-js-switch' htmlFor={id}>\n          <input\n            type='checkbox'\n            id={id}\n            className='mdl-switch__input'\n            checked={value}\n            disabled={!isEnabled}\n            onChange={(ev) => this.change(section, prop)(ev.target.checked)}\n            />\n          <span className='mdl-switch__label' />\n        </label>\n      </Item>\n    );\n  }\n\n  list (section, prop, isEnabled = true) {\n    check(section, prop);\n    const {settings} = this.props;\n    const value = or(settings[section][prop], data[section][prop].default);\n    const description = fillDescription(data[section][prop].description, value.toString());\n\n    return (\n      <Item\n        title={data[section][prop].name}\n        description={description}\n        disabled={!isEnabled}\n        >\n        <div className='mdl-textfield mdl-js-textfield mdl-textfield--floating-label'>\n          {value.map((v, idx) => (\n            <input\n              disabled={!isEnabled}\n              key={idx}\n              className='mdl-textfield__input'\n              type='text'\n              value={v || ''}\n              onChange={(ev) => {\n                const newValue = [...value];\n                if (ev.target.value !== '') {\n                  newValue[idx] = ev.target.value;\n                } else {\n                  newValue.splice(idx, 1);\n                }\n                this.change(section, prop)(newValue);\n              }}\n              />\n          ))}\n          <br />\n          <button\n            style={{bottom: 0, right: 0, zIndex: 10, transform: 'scale(0.5)'}}\n            className='mdl-button mdl-js-button mdl-button--fab mdl-button--mini-fab mdl-js-ripple-effect'\n            onClick={() => this.change(section, prop)(value.concat(['']))}\n            disabled={!isEnabled}\n            >\n            <i className='material-icons'>add</i>\n          </button>\n        </div>\n      </Item>\n    );\n  }\n}\n\nexport function fillDescription(description, value, key) {\n  if (!description) {\n    console.warn(`Cant find description for: value:${value} at ${key}`);\n    return 'unknown entry';\n  }\n  return description.replace(/{}/g, value || '');\n}\n\nfunction or(value, def) {\n  if (value === undefined) {\n    return def;\n  }\n  return value;\n}\n\nfunction check(section, prop) {\n  if (!data[section][prop]) {\n    throw new Error(`Can't find data for ${section}.${prop}`);\n  }\n}\n\nfunction val(data) {\n  const match = data.match(/(.+)\\s+\\[(.+)]/);\n  if (!match) {\n    return { name: data, value: data };\n  }\n\n  return {\n    name: match[1],\n    value: match[2]\n  };\n}\n\nexport default Editor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport './Select.css';\n\nfunction Select ({value, onChange, values, id, disabled, allowInput}) {\n  const selected = values.find(val => val.value === value) ||\n    (allowInput && {name: value, value}) ||\n    {};\n\n  // We cannot just remove options, since mdl is adding some additional dom nodes.\n  const list = (\n    <ul\n      className='mdl-menu mdl-menu--bottom-left mdl-js-menu'\n      htmlFor={id}\n      style={disabled ? { display: 'none' } : {}}\n    >\n      {\n        values.map(({name, value}) => (\n          <li className='mdl-menu__item' data-val={value} key={value} onClick={() => onChange(value)}>{name}</li>\n        ))\n      }\n    </ul>\n  );\n\n  return (\n    <div className='mdl-textfield mdl-js-textfield mdl-textfield--floating-label getmdl-select'>\n      <input\n        onKeyDown={handleKeyPress}\n        className={classnames('mdl-textfield__input', {\n          'is-disabled': disabled // Overcome mdl light issues\n        })}\n        disabled={disabled}\n        value={selected.name}\n        type='text'\n        id={id}\n        readOnly={!allowInput}\n        {... (allowInput ? {onChange: (ev) => onChange(ev.target.value)} : {})}\n        data-val={selected.value}\n        />\n      {list}\n    </div>\n  );\n}\n\nfunction handleKeyPress (ev) {\n  if (ev.keyCode === 13) {\n    ev.target.dispatchEvent(new window.MouseEvent('click'));\n  }\n}\n\nSelect.propTypes = {\n  id: PropTypes.string.isRequired,\n  value: PropTypes.any.isRequired,\n  onChange: PropTypes.func.isRequired,\n  values: PropTypes.array.isRequired,\n  disabled: PropTypes.bool,\n  allowInput: PropTypes.bool\n};\n\nSelect.defaultPropTypes = {\n  disabled: false,\n  allowInput: false\n};\n\nexport default Select;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Section.css';\n\nconst styles = {\n  sectionVisible: {},\n  sectionHidden: {\n    visibility: 'hidden',\n    height: 0\n  }\n};\n\nclass Section extends Component {\n\n  state = {\n    collapsed: true\n  };\n\n  constructor (...args) {\n    super(...args);\n    this.state = {\n      collapsed: this.props.collapsed\n    };\n  }\n\n  componentWillReceiveProps (newProps) {\n    if (this.props.collapsed !== newProps.collapsed) {\n      this.setState({\n        collapsed: newProps.collapsed\n      });\n    }\n  }\n\n  toggleCollapsed = () => {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  };\n\n  render () {\n    const {title, description, children} = this.props;\n    const {collapsed} = this.state;\n    return (\n      <div className='section'>\n        <h5 onClick={this.toggleCollapsed} style={{cursor: 'pointer'}}>\n          <button className='mdl-button mdl-js-button mdl-button--icon'>\n            {collapsed ? (\n              <i className='material-icons'>expand_more</i>\n            ) : (\n              <i className='material-icons'>expand_less</i>\n            )}\n          </button>\n          {title}\n        </h5>\n        <p>{description}</p>\n        <ul className='mdl-list section-list' style={collapsed ? styles.sectionHidden : styles.sectionVisible}>\n          {children}\n        </ul>\n      </div>\n    );\n  }\n\n  static propTypes = {\n    collapsed: PropTypes.bool,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([PropTypes.element, PropTypes.array]).isRequired\n  };\n\n  static defaultProps = {\n    collapsed: true\n  };\n}\n\nexport default Section;\n","import React from 'react';\n\nfunction TopBar () {\n  return (\n    <div className='mdl-layout__header'>\n      <div className='mdl-layout__header-row'>\n        <span className='mdl-layout-title'>Tari Config Generator</span>\n        <div className='mdl-layout-spacer' />\n      </div>\n    </div>\n  );\n}\n\nexport default TopBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport dialogPolyfill from 'dialog-polyfill/dialog-polyfill.js';\nimport 'dialog-polyfill/dialog-polyfill.css';\nimport './Modal.css';\n\nclass Modal extends Component {\n\n  static propTypes = {\n    isOpen: PropTypes.bool,\n    title: PropTypes.string,\n    onClose: PropTypes.func.isRequired,\n    children: PropTypes.object\n  };\n\n  close () {\n    ReactDOM.findDOMNode(this).close();\n  }\n\n  show () {\n    ReactDOM.findDOMNode(this).showModal();\n  }\n\n  componentDidMount () {\n    const dialog = ReactDOM.findDOMNode(this);\n    if (!dialog.showModal) {\n      dialogPolyfill.registerDialog(dialog);\n    }\n\n    if (this.props.isOpen) {\n      // Delay is a workaround for paint issue (modal overlay not showing up)\n      setTimeout(() => { this.show(); }, 100);\n    }\n  }\n\n  componentDidUpdate (prevProps) {\n    if (prevProps.isOpen && !this.props.isOpen) {\n      this.close();\n    } else if (!prevProps.isOpen && this.props.isOpen) {\n      this.show();\n    }\n  }\n\n  render () {\n    return (\n      <dialog className='mdl-dialog'>\n        <h4 className='mdl-dialog__title'>{this.props.title}</h4>\n        <div className='mdl-dialog__content'>\n          {this.props.children}\n        </div>\n        <div className='mdl-dialog__actions'>\n          <button type='button' className='mdl-button close' onClick={this.props.onClose}>OK</button>\n        </div>\n      </dialog>\n    );\n  }\n}\n\nexport default Modal;\n","export function mix (a, b) {\n  if (typeof a !== 'object' || typeof b !== 'object' || Array.isArray(a) || Array.isArray(b)) {\n    return typeof b === 'undefined' ? a : b;\n  }\n\n  Object.keys(a).forEach(key => {\n    a[key] = mix(a[key], b[key]);\n  });\n\n  return a;\n}\n\nexport function clone (val) {\n  return JSON.parse(JSON.stringify(val));\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport toml from 'toml';\n\nimport './Importer.css';\n\nimport {mix, clone} from '../util';\n\nclass Importer extends PureComponent {\n\n  static propTypes = {\n    defaults: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onError: PropTypes.func.isRequired\n  };\n\n  constructor (props) {\n    super(props);\n    this.handleFileChange = this.handleFileChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleFileChange (ev) {\n    const file = ev.target.files[0];\n    const domTarget = ev.target;\n    domTarget.value = '';\n\n    if (!window.confirm('Do you want to overwrite current config?')) {\n      return;\n    }\n\n    if (file.name.match(/.*\\.toml$/)) {\n      var reader = new window.FileReader();\n\n      reader.onload = _ => {\n        let importedData;\n\n        try {\n          importedData = toml.parse(reader.result);\n        } catch (err) {\n          this.props.onError(`Couldn't parse configuration file. ${err.toString()}`);\n          return;\n        }\n\n        const data = mix(clone(this.props.defaults), importedData);\n        domTarget.blur();\n        this.props.onChange(data);\n      };\n\n      reader.readAsText(file);\n    } else {\n      this.props.onError('Please import a .toml configuration file.');\n    }\n  }\n\n  handleClick () {\n    this.refs.fileInput.click();\n  }\n\n  render () {\n    return (\n      <button\n        className='mdl-button mdl-button--icon mdl-js-button mdl-js-ripple-efect import'\n        onClick={this.handleClick}>\n\n        <input\n          type='file'\n          ref='fileInput'\n          onChange={this.handleFileChange} />\n\n        <i className='material-icons' id='upload'>file_upload</i>\n        <span className='mdl-tooltip' htmlFor='upload'>Load Config File</span>\n      </button>\n    );\n  }\n}\n\nexport default Importer;\n","/* global Blob */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Preview.css';\n\nimport Importer from './Importer';\n\nimport { joinPath, basePath } from '../system';\nimport data from '../tari.config.json';\n// TODO [ToDr] move to some common?\nimport {fillDescription} from './Editor';\n\nclass Preview extends Component {\n  static propTypes = {\n    settings: PropTypes.object.isRequired,\n    defaults: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onError: PropTypes.func.isRequired\n  };\n\n  generateConfig = () => {\n    const {settings, defaults} = this.props;\n    const data = toToml(settings, defaults);\n    const filename = 'config.toml';\n    const blob = new Blob([data], {type: 'text/toml'});\n    if (window.navigator.msSaveOrOpenBlob) {\n      window.navigator.msSaveBlob(blob, filename);\n    } else {\n      const elem = window.document.createElement('a');\n      elem.href = window.URL.createObjectURL(blob);\n      elem.download = filename;\n      document.body.appendChild(elem);\n      elem.click();\n      document.body.removeChild(elem);\n    }\n  }\n\n  render () {\n    const {settings, defaults} = this.props;\n    return (\n      <div className='mdl-card mdl-shadow--2dp preview-card'>\n        <div className='mdl-card__title'>\n          <div className='preview-title mdl-card__title-text'>\n            config.toml\n          </div>\n        </div>\n        <div className='mdl-card__actions mdl-card--border'>\n          <textarea className='preview-editor' readOnly value={toToml(settings, defaults)} />\n        </div>\n        <div className='mdl-card__menu'>\n          <Importer defaults={defaults} onChange={this.props.onChange} onError={this.props.onError} />\n          <a\n            className='mdl-button mdl-button--icon mdl-js-button mdl-js-ripple-efect'\n            target='_blank'\n            rel='noopener noreferrer'\n            href={window.location.toString()}>\n            <i className='material-icons' id='link'>link</i>\n            <span className='mdl-tooltip' htmlFor='link'>Link to this Config File</span>\n          </a>\n          <button\n            className='mdl-button mdl-button--icon mdl-js-button mdl-js-ripple-efect'\n            onClick={this.generateConfig}>\n            <i className='material-icons' id='download'>cloud_download</i>\n            <span className='mdl-tooltip' htmlFor='download'>Download Config File</span>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction toToml (settings, defaults) {\n  const toml = Object.keys(settings)\n    .filter(section => section !== '__internal')\n    .reduce((acc, section) => {\n      // for old configs the section might be missing in defaults\n      defaults[section] = defaults[section] || {};\n\n      data[section] = data[section] || {};\n      const sectionName = data[section].section || section;\n      const sectionDescription = data[section].description || \"\";\n\n      acc.push(\"\\n\");\n      acc = acc.concat(toSectionHeader(sectionName, 120));\n      acc.push(split_comment_at(sectionDescription, 118));\n\n      const vals = Object.keys(settings[section])\n        .filter(key => !isEqual(settings[section][key], defaults[section][key]))\n        .map(key => {\n          const val = settings[section][key];\n          const comment = toComment(settings, section, key, val);\n          const setting = `${key} = ${toVal(val)}`;\n          return `\\n${comment}\\n${setting}`;\n        });\n\n      if (vals.length) {\n        acc.push(`\\n[${section}]`);\n      }\n\n      return acc.concat(vals);\n    }, []);\n\n  if (!toml.length) {\n    toml.push(\n      '',\n      '',\n      '# All values you use are defaults. Config is not needed.'\n    );\n  }\n\n  const { platform } = settings.__internal || defaults.__internal;\n  const configPath = joinPath([basePath(platform), 'config.toml'], platform);\n  toml.unshift(\n    '# This config should be placed in following path:',\n    `#   ${configPath}`,\n  );\n\n  return toml.join('\\n');\n}\n\nfunction isEqual (a, b) {\n  // TODO [todr] optimize\n  return JSON.stringify(a) === JSON.stringify(b);\n}\n\n/**\n * Splits a string at word boundaries so that each line is at most `line_length` long, and then prefixes each line\n * with a comment character\n */\nfunction split_comment_at(multi_comment, line_length) {\n  const split = (comment) => {\n    const lines = [];\n    const words = comment.split(/\\s/);\n    while (words.length > 0) {\n      let line = \"#\";\n      while (words.length > 0 && (line.length + words[0].length < line_length)) {\n        line += \" \" + words.shift();\n      }\n      lines.push(line);\n    }\n    return lines.join('\\n');\n  };\n  const comments = multi_comment.split('\\n');\n  return comments.map(split).join('\\n');\n}\n\nfunction toSectionHeader(heading, width) {\n  const banner = \"#\".repeat(width);\n  const inner = `#${\" \".repeat(width-2)}#`;\n  const left_pad = Math.floor((width-2 - heading.length) / 2);\n  const right_pad = width - heading.length - 2 - left_pad;\n  let title = `#${\" \".repeat(left_pad)}${heading}${\" \".repeat(right_pad)}#`;\n  return [banner, inner, title, inner, banner];\n}\n\nfunction toComment (settings, section, key, value) {\n  // for old configs the section might be missing in defaults\n  data[section] = data[section] || {};\n  data[section][key] = data[section][key] || {};\n\n  let comment;\n  if (typeof data[section][key].description === 'object') {\n    if ('suggestions' in data[section][key] && !(value in data[section][key].description)) {\n      comment = `Custom ${key.toLowerCase()}`;\n    }\n    comment = fillDescription(data[section][key].description[value], value);\n  } else {\n    comment = fillDescription(data[section][key].description, value);\n  }\n  return split_comment_at(comment, 118);\n}\n\nfunction toVal (val) {\n  if (typeof val === 'boolean') {\n    return `${val}`;\n  }\n\n  if (typeof val === 'number') {\n    return `${val}`;\n  }\n\n  if (Array.isArray(val)) {\n    return `[${val.map(v => toVal(v)).join(', ')}]`;\n  }\n\n  // Escape windows paths\n  val = val ? val.replace(/\\\\([^\\\\])/g, '\\\\\\\\$1') : val;\n  return `\"${val}\"`;\n}\n\nexport default Preview;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Presets.css';\n\nimport Select from '../controls/Select';\nimport Item from '../Item';\n\nimport mining from './mining.json';\nimport ports from './ports.json';\n\nimport {mix, clone} from '../../util';\n\nfunction toVal (val) {\n  return { name: val, value: val };\n}\n\nconst presets = {\n  'None': null,\n  'Defaults': null,\n  'Mining': mining,\n  'Non-standard Ports': ports\n};\n\nclass Presets extends PureComponent {\n\n  static propTypes = {\n    preset: PropTypes.string,\n    defaults: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired\n  };\n\n  static defaultProps = {\n    preset: 'None'\n  };\n\n  change = (preset) => {\n    if (preset === 'None') {\n      return;\n    }\n\n    if (this.props.preset === 'None') {\n      if (!window.confirm('Do you want to overwrite current config?')) {\n        this.forceUpdate();\n        return;\n      }\n    }\n\n    const data = mix(clone(this.props.defaults), clone(presets[preset] || {}));\n    this.props.onChange(preset, data);\n  };\n\n  render () {\n    const {preset} = this.props;\n\n    return (\n      <div className='presets'>\n        <Item title={''} description={'Load predefined config.'}>\n          <Select\n            onChange={this.change}\n            value={preset}\n            values={Object.keys(presets).map(toVal)}\n            id={'presets'}\n            disabled={false}\n            />\n        </Item>\n      </div>\n    );\n  }\n}\n\nexport default Presets;\n","import Presets from './Presets';\nexport default Presets;\n","import React, { Component, Fragment } from 'react';\nimport isEqual from 'lodash.isequal';\n\nimport TopBar from './components/TopBar';\nimport Modal from './components/Modal';\nimport Editor from './components/Editor';\nimport Preview from './components/Preview';\nimport Presets from './components/Presets';\n\nimport { detectPlatform } from './system';\nimport data from './tari.config.json';\n\nfunction loadFromURL () {\n  const hash = window.location.hash;\n  if (!hash.startsWith('#config=')) {\n    return null;\n  }\n\n  try {\n    const config = hash.split('=')[1];\n    return JSON.parse(window.atob(config));\n  } catch (e) {\n    console.warn('Error parsing config from URL: ', e);\n    return null;\n  }\n}\n\nfunction loadFromLocalStorage () {\n  try {\n    return JSON.parse(window.localStorage.getItem('last-config'));\n  } catch (e) {\n    window.localStorage.setItem('last-config', null);\n    return null;\n  }\n}\n\nfunction loadSettings () {\n  const defaultSettings = generateDefaults(data);\n  try {\n    let settings = loadFromLocalStorage();\n    const url = loadFromURL();\n    if (settings && url) {\n      const diff = JSON.stringify(settings) !== JSON.stringify(url);\n      if (diff && window.confirm('Detected config in URL. Do you want to override your current config?')) {\n        settings = null;\n      }\n    }\n    if (!settings && url) {\n      settings = url;\n    }\n    if (settings && typeof settings === 'object') {\n      // make sure the sections are always created\n      const errors = [];\n      Object.keys(defaultSettings).forEach(key => {\n        settings[key] = settings[key] || {};\n        Object.keys(defaultSettings[key]).forEach(prop => {\n          let settingsValue = settings[key][prop];\n          let defaultSettingsValue = defaultSettings[key][prop];\n          if (settingsValue === undefined) {\n            settings[key][prop] = defaultSettingsValue;\n          } else if (typeof settingsValue !== typeof defaultSettingsValue) {\n            errors.push({\n              section: key,\n              prop,\n              value: settingsValue,\n              type: typeof settingsValue,\n              expected: typeof defaultSettingsValue});\n            console.error(`Incorrect type for config item ${key}.${prop} with value ${JSON.stringify(settingsValue)} (found ${typeof settingsValue}, expected ${typeof defaultSettingsValue})`);\n            settings[key][prop] = defaultSettingsValue;\n          }\n        });\n      });\n      return {settings, errors};\n    }\n  } catch (e) {\n    console.warn(e);\n  }\n\n  defaultSettings.base_node.chain = 'testnet';\n  return {settings: defaultSettings, errors: []};\n}\n\nfunction saveSettings (settings) {\n  const defaultSettings = generateDefaults(data);\n  const cloned = JSON.parse(JSON.stringify(settings));\n\n  Object.keys(defaultSettings).forEach(section => {\n    Object.keys(defaultSettings[section]).forEach(prop => {\n      if (isEqual(cloned[section][prop], defaultSettings[section][prop])) {\n        delete cloned[section][prop];\n      }\n    });\n\n    if (Object.keys(cloned[section]).length === 0) {\n      delete cloned[section];\n    }\n  });\n\n  const json = JSON.stringify(cloned);\n  try {\n    window.localStorage.setItem('last-config', json);\n    window.location.hash = 'config=' + window.btoa(json);\n  } catch (e) {\n  }\n}\n\nclass App extends Component {\n\n  constructor (props) {\n    super(props);\n\n    const {settings, errors} = loadSettings();\n\n    let modal;\n    if (!errors.length) {\n      modal = {visible: false};\n    } else {\n      let lis = errors.map(({section, prop, value, type, expected}, i) =>\n        (<li key={i}><em>{section}.{prop}</em> has value <em>{JSON.stringify(value)}</em> of type <em>{type}</em>; expected type <em>{expected}</em></li>));\n      modal = {\n        visible: true,\n        title: 'Warning',\n        content: (\n          <Fragment>\n            <p>{lis.length > 1 ? 'Some items' : 'An item'} couldn't be parsed from the loaded config:</p>\n            <ul>{lis}</ul>\n          </Fragment>\n        )\n      };\n    }\n\n    this.state = {\n      preset: undefined,\n      settings,\n      defaults: generateDefaults(data),\n      modal\n    };\n  }\n\n  handleChange = (settings) => {\n    saveSettings(settings);\n    this.setState({\n      preset: undefined,\n      settings\n    });\n  };\n\n  handlePreset = (preset, settings) => {\n    saveSettings(settings);\n    this.setState({\n      preset,\n      settings\n    });\n  };\n\n  handleError = (error) => {\n    this.setState({\n      modal: {\n        visible: true,\n        title: 'Error',\n        content: (\n          <p>{error}</p>\n        )\n      }\n    });\n  };\n\n  render () {\n    const {settings, defaults, preset, modal} = this.state;\n\n    return (\n      <div className='mdl-layout mdl-js-layout mdl-layout--fixed-header'>\n        <TopBar />\n        <main className='mdl-layout__content'>\n          <div className='mdl-grid'>\n            <div className='mdl-cell mdl-cell--6-col mdl-cell--12-col-tablet'>\n              <Editor settings={settings} onChange={this.handleChange} />\n            </div>\n            <div className='mdl-cell mdl-cell--6-col mdl-cell--12-col-tablet'>\n              <Presets preset={preset} defaults={defaults} onChange={this.handlePreset} />\n              <Preview settings={settings} defaults={defaults} onChange={this.handleChange} onError={this.handleError} />\n            </div>\n          </div>\n        </main>\n        <Modal title={modal.title} isOpen={modal.visible} onClose={() => this.setState({modal: {visible: false}})}>\n          {modal.content}\n        </Modal>\n      </div>\n    );\n  }\n}\n\nfunction generateDefaults (settings) {\n  const defaults = Object.keys(settings).reduce((data, section) => {\n    data[section] = Object.keys(settings[section])\n    .filter(key => (typeof settings[section][key] === 'object') && (settings[section][key].default !== undefined))\n    .reduce((d, key) => {\n      d[key] = settings[section][key].default;\n      return d;\n    }, {});\n    return data;\n  }, {});\n\n  defaults.__internal.platform = detectPlatform();\n  return defaults;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'material-design-lite/material.css';\nimport 'material-design-lite/material.js';\nimport 'getmdl-select/getmdl-select.min.css';\nimport 'getmdl-select/getmdl-select.min.js';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}